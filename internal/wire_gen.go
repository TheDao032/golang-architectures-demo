// Code generated by Wire. DO NOT EDIT.

//go:generate go run github.com/google/wire/cmd/wire
//go:build !wireinject
// +build !wireinject

package internal

import (
	"github.com/TheDao032/go-backend-utils-architecture/logger"
	"github.com/TheDao032/golang-architectures-demo/config"
	"github.com/TheDao032/golang-architectures-demo/database"
	"github.com/TheDao032/golang-architectures-demo/internal/api"
	"github.com/TheDao032/golang-architectures-demo/internal/api/http"
	"github.com/google/wire"
)

// Injectors from wire.go:

func InitializeContainer(appCfg *config.AppConfig, logger2 logger.Logger, readDB *database.ReadDB, writeDB *database.WriteDB) *api.ApiContainer {
	healthcheckHandler := http.NewHealthcheckHandler(logger2, appCfg, readDB, writeDB)
	server := http.NewServer(logger2, appCfg, healthcheckHandler)
	apiContainer := api.NewApiContainer(server)
	return apiContainer
}

// wire.go:

var container = wire.NewSet(api.NewApiContainer)

var apiSet = wire.NewSet(http.NewServer)

var serviceSet = wire.NewSet(http.NewHealthcheckHandler)
